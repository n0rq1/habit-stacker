name: deploy api to GCR

on:
    push:
      branches: ["main"]
    pull_request:
      branches: ["main"]

jobs: 
  build-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t habit .

      - name: Save Docker image as artifact
        run: |
          docker save -o habit.tar habit
        shell: bash

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: habit-image
          path: habit.tar

  create-release-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
      issues: write
      pull-requests: write

    needs: build-push-image
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save version for Docker tag
        id: get_version
        run: echo "VERSION=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_OUTPUT

  push-image:
    runs-on: ubuntu-latest
    needs: create-release-version
    outputs:
      version: ${{ needs.create-release-version.outputs.version }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: habit-image

      - name: Load Docker image
        run: docker load -i habit.tar

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker tag habit ${{ secrets.DOCKER_USERNAME }}/habitstacker:${{ needs.create-release-version.outputs.version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/habitstacker:${{ needs.create-release-version.outputs.version }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: push-image

    steps:
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CRED }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'habitstacker'
          region: us-west1
          image: 'docker.io/${{ secrets.DOCKER_USERNAME }}/habitstacker:${{ needs.push-image.outputs.version }}'
          env_vars: |
            MONGO_URI=${{ secrets.MONGO_URI }}